(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{DD1Z:function(e,t,a){"use strict";var o=a("q1tI"),n=a.n(o),r=a("YFqc"),i=a.n(r),c=a("izhR"),s=a("nOHt"),b=a("8Kt/"),l=a.n(b),d=a("Ex07"),h=n.a.createElement,u=[{name:"Introduction",link:"/introduction"},{name:"Use Proxy",link:"/use-proxy"}],p=function(e,t){return e==="".concat("/docs").concat(t)};t.a=function(e){var t=e.children,a=Object(s.useRouter)();return h(d.a,null,h(l.a,null,h("title",null,"OasisDEX Protocol - Docs")),h(c.k,{my:[3,5]},h(c.q,{columns:[1,"200px 1fr"],sx:{alignItems:"flex-start"}},h(c.q,null,u.map((function(e,t){var o=e.name,n=e.link;return h(i.a,{href:"".concat("/docs").concat(n),key:t,passHref:!0},h(c.z,{sx:{p:0,color:p(a.pathname,n)?"primary":"text"}},o))}))),h(c.f,{sx:{"& > *:first-of-type":{mt:0}}},t))))}},Ff2n:function(e,t,a){"use strict";function o(e,t){if(null==e)return{};var a,o,n=function(e,t){if(null==e)return{};var a,o,n={},r=Object.keys(e);for(o=0;o<r.length;o++)a=r[o],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)a=r[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}a.d(t,"a",(function(){return o}))},NO2J:function(e,t,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/introduction",function(){return a("gE31")}])},gE31:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return h}));var o=a("wx14"),n=a("Ff2n"),r=a("q1tI"),i=a.n(r),c=a("7ljp"),s=a("DD1Z"),b=a("izhR"),l=(i.a.createElement,{}),d="wrapper";function h(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(c.b)(d,Object(o.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)(s.a,{mdxType:"DocsLayout"},Object(c.b)("h1",{id:"intro-to-the-oasisdex-protocol"},"Intro to the OasisDEX Protocol"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Level"),": Beginner",Object(c.b)("br",{parentName:"p"}),"\n",Object(c.b)("strong",{parentName:"p"},"Estimated Time"),": 45 - 60 minutes"),Object(c.b)("p",null,"This guide is based on the ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://kovan.etherscan.io/address/0xe325acB9765b02b8b418199bf9650972299235F4"}),"Kovan deployed")," ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/daifoundation/maker-otc"}),"maker-otc contract"),". This guide can also be used with the ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://etherscan.io/address/0x794e6e91555438aFc3ccF1c5076A74F42133d08D"}),"mainnet deployment"),"."),Object(c.b)("h2",{id:"overview"},"Overview"),Object(c.b)("p",null,"The OasisDEX Protocol enables you to trade in a completely decentralised manner. The entire trading process is peer-to-peer, does not require an operator and is non-custodial. Besides the ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://oasis.app/trade"}),"oasis.app/trade")," implementation by Maker Foundation, there are other third party Dapps using the OasisDEX protocol contracts, such as:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"https://dydx.exchange/"}),"https://dydx.exchange/")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"https://dex.ag/"}),"https://dex.ag/")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"https://dexindex.io/"}),"https://dexindex.io/")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"https://forkoasisdex.com"}),"https://forkoasisdex.com")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"https://forkoasisdex.com/direct/"}),"https://forkoasisdex.com/direct/")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"https://kyberswap.com/swap"}),"https://kyberswap.com/swap"))),Object(c.b)("p",null,"Note that the above list for informational purposes only, is not continuously updated (and thus may be outdated and/or inaccurate), and any use of any of the above is at your own risk."),Object(c.b)("p",null,"This guide will introduce you to the structure of the maker-otc smart contract that powers the OasisDEX Protocol and show you how you can make trades through the command line."),Object(c.b)("h2",{id:"learning-objectives"},"Learning Objectives"),Object(c.b)("p",null,"In this guide, you'll learn the basics of the OasisDEX protocol and trade ETH and DAI through the command line. In addition, this will give you an understanding on how to implement the function calls into your own app or custom smart contract."),Object(c.b)("h2",{id:"pre-requisites"},"Pre-requisites"),Object(c.b)("p",null,"You'll need to know these concepts in order to continue with this guide:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"Solidity"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/dapphub/dapptools"}),"Dapptools")," - Dapp, Seth"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"https://hackernoon.com/the-world-of-decentralised-exchanges-on-the-ethereum-network-an-overview-ee25fc5f9f"}),"What defines a Decentralised Exchange"))),Object(c.b)("h2",{id:"oasisdex-protocol"},"OasisDEX Protocol"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Before starting this guide please install ",Object(c.b)("a",Object(o.a)({parentName:"em"},{href:"https://dapp.tools/"}),"dapptools")," and ",Object(c.b)("a",Object(o.a)({parentName:"em"},{href:"https://github.com/makerdao/developerguides/blob/master/devtools/seth/seth-guide-01/seth-guide-01.md"}),"setup seth")," for use with the Kovan testnet.")),Object(c.b)("h3",{id:"high-level-overview"},"High Level Overview"),Object(c.b)("p",null,"The OasisDEX protocol uses an on-chain order book and a matching engine. The main advantage to this design is that liquidity is available for other smart contracts to access in one atomic transaction."),Object(c.b)("p",null,"An order book for each market is implemented as two double-linked sorted lists, one list for each side of the market (buy and sell). An important feature of the design is that at any point in time, the lists should be sorted accordingly. The second most important design consideration when building the protocol was the use of a so-called Escrow model for Makers. The Escrow model simply means that a given asset is locked within the contract when a new order is placed. Although such an approach locks down the liquidity, it guarantees a zero counterparty risk and instantaneous settlement."),Object(c.b)("h3",{id:"maker-otc-contract-structure"},"Maker-OTC Contract Structure"),Object(c.b)("p",null,"The trading engine involves the main contract ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/daifoundation/maker-otc/blob/master/src/matching_market.sol"}),"matching_market.sol")," importing ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/daifoundation/maker-otc/blob/master/src/simple_market.sol"}),"simple_market.sol")," and ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/daifoundation/maker-otc/blob/master/src/expiring_market.sol"}),"expiring_market.sol"),"."),Object(c.b)("p",null,"Through the matching_market.sol contract, you can make all the necessary calls to the maker-otc trading engine."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Note:")," It is recommended to make direct function calls to the maker-otc contract if you are intending to build other smart contracts that communicate with the maker-otc contract or build a trading bot. Example of this is the ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://dydx.exchange/"}),"dydx exchange"),". However, if you\u2019re integrating this maker-otc engine for wallets or UIs, then it is recommended to use the ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/daifoundation/oasis-direct-proxy"}),"Oasis Direct proxy contracts"),"."),Object(c.b)("p",null,"To find all the functions available for this contract, check the source code on ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://kovan.etherscan.io/address/0xe325acB9765b02b8b418199bf9650972299235F4#code"}),"etherscan"),". Below is a list of the main functions you can use from this contract:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"offer(pay_amt, pay_gem, buy_amt, buy_gem, pos)")," - the main API of the matching engine. This method should be used 99% of the time!",Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},"uint pay_amt - the maker (ask) sell amount."),Object(c.b)("li",{parentName:"ul"},"ERC20 pay_gem - the maker (ask) to sell specified collateral token (address)."),Object(c.b)("li",{parentName:"ul"},"uint buy_amt - the taker (ask) buy amount."),Object(c.b)("li",{parentName:"ul"},"ERC20 buy_gem - the taker (ask) buy of a specified collateral token (address)."),Object(c.b)("li",{parentName:"ul"},"uint pos - the position to insert an offer."))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"getBestOffer(ERC20 sell_gem, ERC20 buy_gem)")," - gets an offer from the top of the order book."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"getWorseOffer()/getBetterOffer()")," - these are both used for the navigation through an order book."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"getOfferCount()")," - returns the size of the order book."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"getOffer(uint id)")," - return information about the order with a given order ID."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"buy()")," - the buy function is used to fill a specific order (\u201ccherrypicks\u201d). By calling this function, it will execute and settle a trade all within one atomic transaction.",Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Note"),": Can be called externally by the user, and is also called internally by the matching engine (see offer() method for more details)."))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"cancel()")," - cancels an order with a given order ID.")),Object(c.b)("h3",{id:"making-your-first-order"},"Making your first order"),Object(c.b)("p",null,"Before starting with the orders, let's setup the necessary env variables in your terminal. You'll need the main ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://kovan.etherscan.io/address/0xe325acB9765b02b8b418199bf9650972299235F4#code"}),"maker-otc")," (OASISDEX) contract address, the ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://kovan.etherscan.io/address/0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa#code"}),"DAI")," token and the ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://kovan.etherscan.io/address/0xd0a1e359811322d97991e03f863a0c30c2cf029c#code"}),"WETH")," token address:"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{}),"export OASIS=0xe325acB9765b02b8b418199bf9650972299235F4\nexport DAI=0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa\nexport WETH=0xd0A1E359811322d97991E03f863a0C30C2cF029C\nexport ETH_GAS=3000000\n")),Object(c.b)("h4",{id:"approve-oasisdex-in-dai--weth"},"Approve OasisDEX in DAI & WETH"),Object(c.b)("p",null,"Now we need to approve the OASISDEX contract to take funds from your wallet, DAI and WETH respectively. This is due to the fact of how OASISDEX is built, you need to allow the OASISDEX contract to take funds from your wallet in order to use the market functions (offer(), buy()...)"),Object(c.b)("p",null,"Let's define the amount we want to allow OASISDEX to withdraw. We'll set an equal amount for both tokens of 100,000. If you want to trade with higher units, just update the ",Object(c.b)("inlineCode",{parentName:"p"},"$ALLOWANCE")," to your preferred value."),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{}),"export ALLOWANCE=$(seth --to-uint256 $(seth --to-wei 100000 eth))\n")),Object(c.b)("p",null,"To approve OASISDEX in DAI, execute the below command:"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{}),"seth send $DAI 'approve(address,uint256)' $OASIS $ALLOWANCE\n")),Object(c.b)("p",null,"To approve OASISDEX in WETH, execute the below command:"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{}),"seth send $WETH 'approve(address,uint256)' $OASIS $ALLOWANCE\n")),Object(c.b)("h4",{id:"reading-the-market"},"Reading the market"),Object(c.b)("p",null,"In order to make an order on the market, you need to inform yourself of the current market prices. There are 2 ways to do this. One is to go to one of the existing interfaces which use the OasisDEX Protocol, make sure you're on Kovan, and see the order book. Or, call the OASISDEX contract functions to read the order book."),Object(c.b)(b.t,{alt:"order book",src:"/order-book-1.png",mdxType:"Image"}),Object(c.b)("p",null,"If reading from the interface, you can see the order book and the available orders in it. So, you can see that this order book has 3 bids and plenty of asks."),Object(c.b)("p",null,"The best bid price to buy WETH is 100 DAI per WETH. The best ask price to buy DAI is 180 Dai per WETH. As seen from the figure, the market at 100 DAI and 180 DAI are very shallow, you can only buy 0.02609 WETH at 100 DAI and sell 0.1 WETH at 180 DAI."),Object(c.b)("p",null,"Depending on the urgency of your order, you could fill these available orders or create a new order yourself and add it to the order book waiting for it to be filled."),Object(c.b)("p",null,"Now, if you'd like to get the same information as from the interface, we need to read the OasisDEX contract directly."),Object(c.b)("p",null,"Say we want to find the best offer on the WETH/DAI market, i.e. we want to purchase WETH with DAI and I want to know the best offer available. We can do this with the ",Object(c.b)("inlineCode",{parentName:"p"},"getBestOffer(ERC20 sell_gem, ERC20 buy_gem)")," function. This function returns you the best offer available on the order book for your specified market. The return value of this function is an id."),Object(c.b)("p",null,"Let's get the id of the best offer of the WETH/DAI market. The command below gets the id of the best offer and converts it to a decimal number."),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{}),"seth --to-dec $(seth call $OASIS 'getBestOffer(address,address)' $DAI $WETH)\n")),Object(c.b)("p",null,"Output: ",Object(c.b)("inlineCode",{parentName:"p"},"3411")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Note"),": You will get a different order id, so make sure to change the parameters to the id from your terminal."),Object(c.b)("p",null,"Now we can find more information about this order by using the getOffer(uint id) function. This function returns the pay and buy amount of each token respectively. Execute the below command to find order details of order ",Object(c.b)("inlineCode",{parentName:"p"},"3411"),":"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{}),"seth call $OASIS 'getOffer(uint)(uint,address,uint,address)' 3411\n")),Object(c.b)("p",null,"Output:"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{}),"8ac7230489e80000 -> Pay amount in DAI\n4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa -> DAI Token Address\n6345785d8a0000 -> Buy amount in WETH\nd0a1e359811322d97991e03f863a0c30c2cf029c -> WETH Token Address\n")),Object(c.b)("p",null,"You can convert the hex outputs of DAI and WETH amounts to decimal:"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{}),"seth --from-wei $(seth --to-dec 8ac7230489e80000)\nseth --from-wei $(seth --to-dec 16345785d8a0000)\n")),Object(c.b)("p",null,"Reading from the above output, we can see that the best order offer is 10 DAI per 0.1 WETH. Meaning that you can buy 1 WETH at a price of 100 DAI (10/0.1 = 100) in this offer."),Object(c.b)("p",null,"If you'd like to know the best offer for the WETH/DAI market, follow the above instructions but change the parameters in the getBestOffer() function. Instead of ",Object(c.b)("inlineCode",{parentName:"p"},"getBestOffer(address,address) $DAI $WETH"),", enter ",Object(c.b)("inlineCode",{parentName:"p"},"getBestOffer(address,address) $WETH $DAI"),"."),Object(c.b)("h4",{id:"making-a-limit-buy-order"},"Making a limit buy order"),Object(c.b)("p",null,"Now that you have the right information, you can start making an order. Say you want to buy WETH with DAI at a price of 177 WETH/DAI. Let's say, 15 DAI worth of WETH: ",Object(c.b)("inlineCode",{parentName:"p"},"15/177 = 0.084745"),". You'll make an order for ",Object(c.b)("inlineCode",{parentName:"p"},"15 DAI for 0.084745 WETH"),"."),Object(c.b)("p",null,"To make an order on OasisDEX, we need to call the offer() function."),Object(c.b)("p",null,"Let's set the necessary parameters for the offer() function. Besides the pay and buy amounts that we need to define, we also need to add the pos parameter to the function. Position parameter is a number that represents an order id. We use this parameter to tell the trading engine where to place the order. If we know where our order should be placed, then we take the closest order id and use that as as a pos parameter."),Object(c.b)("p",null,"In our case, we can set pos parameter to 3411. This way, the engine will know exactly where to place the offer. In addition, you can also set the pos parameter to 0. This will make the engine search the complete order book to find a position for your order. This leads to higher gas usage for your transaction, which could lead to a failed transaction. So, it is recommended to set a position yourself."),Object(c.b)("p",null,"With seth, we need to convert our 15 Dai units to eth denomination, i.e. setting the number to 18 decimal points. Hence, you\u2019ll see \\$(seth --to-wei 15 eth)."),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{}),"export pay=$(seth --to-uint256 $(seth --to-wei 15 eth))\nexport buy=$(seth --to-uint256 $(seth --to-wei 0.084745 eth))\nexport pos=3411\n")),Object(c.b)("p",null,"Let's execute the offer function:"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{}),"seth send $OASIS 'offer(uint,address,uint,address,uint)' $pay $DAI $buy $WETH $pos\n")),Object(c.b)("p",null,"We can see the order appear e.g. on the oasis.app interface:"),Object(c.b)(b.t,{align:"center",alt:"order display",src:"/order.png",mdxType:"Image"}),Object(c.b)("p",null,"However, as you can see, more than half of my order has been filled by the matching engine of the OasisDEX Protocol. Now if we look at ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://kovan.etherscan.io/tx/0x21b7267d966f5cf64e684b18aed553d98c946250756a77841ce4232ab9d6f389"}),"etherscan's")," transaction overview:"),Object(c.b)(b.t,{alt:"transaction on etherscan",src:"/transaction.png",align:"center",mdxType:"Image"}),Object(c.b)("p",null,"(this example uses addresses from a previous deployment)"),Object(c.b)("p",null,"I can see that I've paid 8.83 DAI for 0.05 ETH, which means a price of 176.6 DAI (8.83/0.05=176.6). The rest of 6.14 DAI has been put in the order book waiting to be filled."),Object(c.b)("h3",{id:"making-a-limit-sell-order"},"Making a limit sell order"),Object(c.b)("p",null,"The limit sell order consists of selling WETH for DAI. We can do a sell order with the same offer() function as we did with buy order. Now, we just need to change the pay_amount and buy_amount parameters. Pay_amount is 0.05 WETH and buy_amount is 8.885 DAI, this leads to a price of 177.7 DAI/WETH (8.885/0.05 = 177.7)."),Object(c.b)("p",null,"Update the env variables:"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{}),"export pay=$(seth --to-uint256 $(seth --to-wei 0.05 eth))\nexport buy=$(seth --to-uint256 $(seth --to-wei 8.885 eth))\nexport pos=1\n")),Object(c.b)("p",null,"Execute the below command to set a sell limit order:"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{}),"seth send $OASIS 'offer(uint,address,uint,address,uint)' $pay $WETH $buy $DAI $pos\n")),Object(c.b)(b.t,{alt:"sell order",src:"/sell-order.png",mdxType:"Image"}),Object(c.b)("p",null,"We can see that our order has appeared on the order book."),Object(c.b)("h3",{id:"cherry-picking-an-offer-from-the-order-book"},"Cherry-picking an offer from the order book"),Object(c.b)("p",null,"Making a limit order and letting the contract match you with existing orders as described above is the recommended way of trading on the OasisDEX contract. However, sometimes, you might find a specific offer in the order book that you would like to trade on. A good example is if you want to build a trading bot. When this is the case, you could use the buy(uint id, uint amount) function. The first parameter is the id of the offer, which you can get with getBestOffer() function, and the second parameter is the amount you'd like to buy."),Object(c.b)("p",null,"Let's buy some DAI that is being sold at 177 DAI/WETH.",Object(c.b)("br",{parentName:"p"}),"\n","First, let's get the order id of this offer:"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{}),"seth --to-dec $(seth call $OASIS 'getBestOffer(address,address)' $DAI $WETH)\n")),Object(c.b)("p",null,"Output: ",Object(c.b)("inlineCode",{parentName:"p"},"3423")),Object(c.b)("p",null,"Now, let's define the amount we want to buy. We can see that this order offers 15 Dai. Let's buy 8.885 DAI."),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{}),"export buy=$(seth --to-uint256 $(seth --to-wei 8.885 eth))\n")),Object(c.b)("p",null,"After setting the parameters, now we can invoke the buy() function."),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{}),"seth send $OASIS 'buy(uint,uint)' 3423 $buy\n")),Object(c.b)(b.t,{alt:"transaction",src:"/cherry-transaction.png",mdxType:"Image"}),Object(c.b)(b.t,{alt:"order",src:"/cherry-order.png",mdxType:"Image"}),Object(c.b)("p",null,"We can see from the above figures that we paid 0.0501 WETH for 8.885 DAI. As well, the order in the order book has decreased its offer accordingly."),Object(c.b)("h3",{id:"cancelling-your-order"},"Cancelling your order"),Object(c.b)("p",null,"Cancelling your order can be executed by the cancel(uint id) function. So, if we want to cancel the 177 DAI/WETH offer we need the order id, which we already know from above (3423)."),Object(c.b)("p",null,"Execute bellow command to cancel order 3423"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{}),"seth send $OASIS 'cancel(uint id)' 3423\n")),Object(c.b)("p",null,"If you look at the order book and your transaction on kovan.etherscan.io, you'll see that the remaining Dai was returned to you and the order has disappeared from the order book."),Object(c.b)("h2",{id:"summary"},"Summary"),Object(c.b)("p",null,"In this guide we have introduced you to the OasisDEX Protocol (maker-otc contract) that is live on ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://oasis.app/trade"}),"oasis.app/trade")," marketplace. You have been shown commonly used functions within maker-otc contract, and we walked through examples by making some trades."),Object(c.b)("h2",{id:"troubleshooting"},"Troubleshooting"),Object(c.b)("p",null,"If you have any questions, feel free to reach to reach out to the OasisDEX Protocol community. One of the popular places where many discussions take place is this rocket chat channel: ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://chat.makerdao.com/channel/dev"}),"https://chat.makerdao.com/channel/dev")),Object(c.b)("h2",{id:"resources"},"Resources"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"https://kovan.etherscan.io/address/0x4a6bc4e803c62081ffebcc8d227b5a87a58f1f8f#code"}),"Maker-otc contract")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/daifoundation/maker-otc"}),"Maker-otc repo")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/dapphub/dapptools"}),"Dapptools")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/makerdao/developerguides/blob/master/devtools/seth/seth-guide-01/seth-guide-01.md"}),"Setup seth")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"https://hackernoon.com/the-world-of-decentralised-exchanges-on-the-ethereum-network-an-overview-ee25fc5f9f"}),"Overview of Dexes")))))}h.isMDXComponent=!0}},[["NO2J",0,2,1,3,4]]]);